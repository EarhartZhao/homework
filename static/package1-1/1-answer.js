// 事件循环是一个在渲染主线程中的一个for循环，
// 当用户触发一个事件，该事件通过I/O线程，将该事件作为任务(宏任务)传递到消息队列尾部（在添加任务和取出任务时还会加上一个同步锁），渲染主进程中有一个for循环，会不断从消息队列头部获取任务(宏任务)，从而执行。
// 当执行settimeout事件时，渲染进程会创建一个类似于消息队列的延迟队列。当渲染主进程处理完消息队列中的一个任务(宏任务)，会查询延迟队列中是否有符合条件（倒计时）的任务(宏任务)，如果主线程在处理上一个任务时间过久，就会导致倒计时不准确。
// 渲染promise事件时，会将其作为微任务放到当前执行的宏任务内部的微任务队列中，在当前宏任务执行结束前，会执行完微任务队列内的微任务。
// 所以，js的异步编程，就是将（除时间器和http请求）该任务变成微任务延迟执行。
